
<div key={ i }>{ i }</div>

// struct Vector
//     var x: Number
//     var y: Number
//     let constructor = (a, b) =>
//         this.x = a
//         this.y = b

// let x = 12
// let string = "Foo"
// let boolean = true
// let other = false
// let regex = /foo/
// let isNull = null
// var voidThing = undefined
// var ref = someReference
// var point: Point
// type HitPoints = Integer & < 15
// type Whole = Integer & . >= 0
// let print = async (a: Number & . > 0, b: String) =>
//     for i in [1,2]
//         await foo()
//         if bar
//             continue
//         else if stuff == true
//             break
//     return 1
// let [count, setCount] = useState(0)
// let jsx =
//     <div/>
//         if count > 0
//             <p>You clicked {count} times</p>
//         for i in [1,2,3,4]
//             <p>{i}</p>
//         <button/>
//             onClick() => setCount(count + 1)
//             ""
//                 Click me

// export let foo = 12

// export default class Point
//     var x: Foo & > 10 = 12

// Available token types:
//     [comment] [string] [keyword] [number] [regexp] [operator] [namespace]
//     [type] [struct] [class] [interface] [enum] [typeParameter] [function]
//     [member] [macro] [variable] [parameter] [property] [label]

// Available token modifiers:
//     [type.declaration] [type.documentation] [type.member] [type.static]
//     [type.abstract] [type.deprecated] [type.modification] [type.async]

// Some examples:
//     [class.static.token]     [type.static.abstract]
//     [class.static.token]     [type.static]

//     [struct]

//     [function.private]

// An error case:
//     [notInLegend]
